{
	"info": {
		"name": "jsonplaceholder.com",
		"_postman_id": "ee346832-99aa-de28-71c3-924b958e9d58",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "jsonplaceholder",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c897fd14-16bc-4d36-b05b-6e306cb9083c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"qui est esse\");",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "digest",
					"digest": [
						{
							"key": "algorithm",
							"value": "MD5",
							"type": "string"
						},
						{
							"key": "username",
							"value": "postman",
							"type": "string"
						},
						{
							"key": "realm",
							"value": "{{echo_digest_realm}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "password",
							"type": "string"
						},
						{
							"key": "nonce",
							"value": "{{echo_digest_nonce}}",
							"type": "string"
						},
						{
							"key": "nonceCount",
							"value": "",
							"type": "string"
						},
						{
							"key": "clientNonce",
							"value": "",
							"type": "string"
						},
						{
							"key": "opaque",
							"value": "",
							"type": "string"
						},
						{
							"key": "qop",
							"value": "",
							"type": "string"
						},
						{
							"key": "disableRetryRequest",
							"type": "any"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
					}
				],
				"body": {},
				"url": {
					"raw": "http://jsonplaceholder.typicode.com/posts?userId=1",
					"protocol": "http",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"posts"
					],
					"query": [
						{
							"key": "userId",
							"value": "1",
							"equals": true
						}
					]
				},
				"description": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables."
			},
			"response": []
		},
		{
			"name": "jsonpleceholder-delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "16ef51be-afa8-4f00-adac-6c39fc011cd2",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 800ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(800);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://jsonplaceholder.typicode.com//posts/1",
					"protocol": "http",
					"host": [
						"jsonplaceholder",
						"typicode",
						"com"
					],
					"path": [
						"",
						"posts",
						"1"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}
